body {
    background-color: lightblue;
    margin: 0 0 0 0;
}

nav {
    display: flex;
    background-color: lightgreen;
}

/* Task 3: Enhance the Layout with Flexbox Properties Further enhance your layout by using Flexbox properties such as justify-content, align-items, and flex-grow. */
nav > ul {
    display: flex;
    list-style-type: none;
    justify-content: space-around;
    width: 100%;
}

nav > ul > li {
    padding-left: 10px;
}

nav > ul > li > a {
    text-decoration: none;
    font-size: 18px;
}

nav > ul > li > a:hover {
    background-color:bisque;
}

header > div {
    display: flex;
    font-weight: bold;
    background-image: url('monkey.jpg');
    background-size: cover;
    background-repeat: no-repeat;
    height: 400px;
    background-position: center;
    flex-grow: 1 1 0;
}

header h1 {
    margin: auto;
    font-size: 50px;
    color:azure;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
}

main {
    display: flex;
    flex-direction: column;
}

footer {
    display: flex;
    background-color: lightgreen;
}

footer > ul {
    display: flex;
    list-style-type: none;
    justify-content: space-around;
    width: 100%;
}

footer > ul > li {
    padding-left: 10px;
}

footer > ul > li > a {
    text-decoration: none;
    font-size: 18px;
}

footer > ul > li > a:hover {
    background-color:bisque;
}

/* Task 2: Implement Responsive Design Modify your Flexbox layout to include responsive design elements. */

@media screen and (max-width: 600px) {
    nav > ul {
        flex-direction: column;
    }

    nav > ul > li {
        padding: 10px;
    }

    header > div {
        background-size: 100%;
    }

    header h1 {
        font-size: 30px;
    }

    footer > ul {
        flex-direction: column;
    }

    footer > ul > li {
        padding: 10px;
    }
    
}